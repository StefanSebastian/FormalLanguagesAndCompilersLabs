G = (N, E, P, S)

N : 
program
instructions
instruction
declaration
statement
variableDeclaration
arrayDeclaration
type
variable
arrayIndex
statement
input
output
writeContent
assignment
expression
operator1
term
operator2
factor
conditional
condition
elseBlock
loop
relation

E:
identifier, constant,
begin, end, int, char, read, write, if, else,
while, {, }, (, ), [, ], ;, space, +, -, *, /, %,
==, =, !=, <, <=, >, >=, a-z, A-Z, _, 0-9

S: program

P: 
program -> begin instructions end
instructions -> epsilon | instruction instructions
instruction -> declaration | statement								

declaration -> type identifier arrayDeclaration ; 
arrayDeclaration -> epsilon | arrayPosition
arrayPosition -> constant | variable				
type -> int | char

variable -> identifier | identifier [ constant ] | identifier [ variable]				
arrayIndex -> positive_number | constant

statement -> assignment | input | output | conditional | loop

input -> read ( variable ) ;
output -> write ( writeContent ) ;
writeContent -> variable | const 

assignment -> variable = expression ;

expression -> term1 term2
term2 -> operator1 term1 term2 | epsilon
term1 -> term3 term4
term4 -> operator2 term3 term4 | epsilon
term3 -> ( expression ) | identifier | constant							 
operator1 -> + | -
operator2 ->  * | / | %

conditional -> if ( condition ) { instructions } elseBlock
elseBlock -> epsilon | else { instructions }

loop -> while ( condition ) { instructions }

condition -> expression relation expression
relation -> < | <= | > | >= | == | !=